@model Vidly2.Models.CustomerFormViewModel
@{
    if (Model.Id == 0)
    {
        ViewBag.Title = "New Customer";
        <h2>Create New Customer</h2>
    }
    else
    {
        ViewBag.Title = "Edit Customer";
        <h2>Edit Customer</h2>
    }
}


@using (Html.BeginForm("SaveCustomer", "Customers", "POST"))
{
    @Html.ValidationSummary(true, "Please fix the below errors")
    <div class="form-group">
        @Html.LabelFor(c => c.Name)
        @Html.TextBoxFor(c => c.Name, new { @class = "form-control"})
        @Html.ValidationMessageFor(c => c.Name)
    </div>
    <div class="form-group">
        @Html.LabelFor(c => c.MembershipTypeId)
        @Html.DropDownListFor(c => c.MembershipTypeId, new SelectList(Model.MembershipTypes, "Id", "MembershipName"), " select ", new { @class = "form-control" })
        @Html.ValidationMessageFor(c => c.MembershipTypeId)
    </div>
    <div class="form-group">
        @Html.LabelFor(c => c.BirthDate)
        @Html.TextBoxFor(c => c.BirthDate, new { @class = "form-control" })
        @*@Html.TextBoxFor(c => c.BirthDate, new { @class = "form-control datepicker", placeholder = "Select your birthdate" })*@
        @Html.ValidationMessageFor(c => c.BirthDate)
    </div>    
    <div class="form-group">
        @Html.LabelFor(c => c.IsSubscribedToNewsletter)
        @Html.CheckBoxFor(c => c.IsSubscribedToNewsletter, new { @class = "checkbox" })
    </div>
    @Html.HiddenFor(c => c.Id)
    @Html.AntiForgeryToken()
    <div class="form-group">
        <button class="btn btn-primary" type="submit">Save</button>
        <button class="btn btn-default" type="reset">Reset</button>
    </div>
}

@*for client side validation, renderding jquery-val bundle*@
@section scripts 
{
    @Scripts.Render("~/bundles/jqueryval")
}